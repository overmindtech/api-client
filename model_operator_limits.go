/*
NATS Token Exchange

Exchanges OAuth tokens for NATS tokens

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokenx

import (
	"encoding/json"
)

// OperatorLimits OperatorLimits are used to limit access by an account
type OperatorLimits struct {
	Conn *int64 `json:"conn,omitempty"`
	Consumer *int64 `json:"consumer,omitempty"`
	Data *int64 `json:"data,omitempty"`
	DiskStorage *int64 `json:"disk_storage,omitempty"`
	Exports *int64 `json:"exports,omitempty"`
	Imports *int64 `json:"imports,omitempty"`
	Leaf *int64 `json:"leaf,omitempty"`
	MaxBytesRequired *bool `json:"max_bytes_required,omitempty"`
	MemStorage *int64 `json:"mem_storage,omitempty"`
	Payload *int64 `json:"payload,omitempty"`
	Streams *int64 `json:"streams,omitempty"`
	Subs *int64 `json:"subs,omitempty"`
	Wildcards *bool `json:"wildcards,omitempty"`
}

// NewOperatorLimits instantiates a new OperatorLimits object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOperatorLimits() *OperatorLimits {
	this := OperatorLimits{}
	return &this
}

// NewOperatorLimitsWithDefaults instantiates a new OperatorLimits object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOperatorLimitsWithDefaults() *OperatorLimits {
	this := OperatorLimits{}
	return &this
}

// GetConn returns the Conn field value if set, zero value otherwise.
func (o *OperatorLimits) GetConn() int64 {
	if o == nil || o.Conn == nil {
		var ret int64
		return ret
	}
	return *o.Conn
}

// GetConnOk returns a tuple with the Conn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatorLimits) GetConnOk() (*int64, bool) {
	if o == nil || o.Conn == nil {
		return nil, false
	}
	return o.Conn, true
}

// HasConn returns a boolean if a field has been set.
func (o *OperatorLimits) HasConn() bool {
	if o != nil && o.Conn != nil {
		return true
	}

	return false
}

// SetConn gets a reference to the given int64 and assigns it to the Conn field.
func (o *OperatorLimits) SetConn(v int64) {
	o.Conn = &v
}

// GetConsumer returns the Consumer field value if set, zero value otherwise.
func (o *OperatorLimits) GetConsumer() int64 {
	if o == nil || o.Consumer == nil {
		var ret int64
		return ret
	}
	return *o.Consumer
}

// GetConsumerOk returns a tuple with the Consumer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatorLimits) GetConsumerOk() (*int64, bool) {
	if o == nil || o.Consumer == nil {
		return nil, false
	}
	return o.Consumer, true
}

// HasConsumer returns a boolean if a field has been set.
func (o *OperatorLimits) HasConsumer() bool {
	if o != nil && o.Consumer != nil {
		return true
	}

	return false
}

// SetConsumer gets a reference to the given int64 and assigns it to the Consumer field.
func (o *OperatorLimits) SetConsumer(v int64) {
	o.Consumer = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *OperatorLimits) GetData() int64 {
	if o == nil || o.Data == nil {
		var ret int64
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatorLimits) GetDataOk() (*int64, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *OperatorLimits) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given int64 and assigns it to the Data field.
func (o *OperatorLimits) SetData(v int64) {
	o.Data = &v
}

// GetDiskStorage returns the DiskStorage field value if set, zero value otherwise.
func (o *OperatorLimits) GetDiskStorage() int64 {
	if o == nil || o.DiskStorage == nil {
		var ret int64
		return ret
	}
	return *o.DiskStorage
}

// GetDiskStorageOk returns a tuple with the DiskStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatorLimits) GetDiskStorageOk() (*int64, bool) {
	if o == nil || o.DiskStorage == nil {
		return nil, false
	}
	return o.DiskStorage, true
}

// HasDiskStorage returns a boolean if a field has been set.
func (o *OperatorLimits) HasDiskStorage() bool {
	if o != nil && o.DiskStorage != nil {
		return true
	}

	return false
}

// SetDiskStorage gets a reference to the given int64 and assigns it to the DiskStorage field.
func (o *OperatorLimits) SetDiskStorage(v int64) {
	o.DiskStorage = &v
}

// GetExports returns the Exports field value if set, zero value otherwise.
func (o *OperatorLimits) GetExports() int64 {
	if o == nil || o.Exports == nil {
		var ret int64
		return ret
	}
	return *o.Exports
}

// GetExportsOk returns a tuple with the Exports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatorLimits) GetExportsOk() (*int64, bool) {
	if o == nil || o.Exports == nil {
		return nil, false
	}
	return o.Exports, true
}

// HasExports returns a boolean if a field has been set.
func (o *OperatorLimits) HasExports() bool {
	if o != nil && o.Exports != nil {
		return true
	}

	return false
}

// SetExports gets a reference to the given int64 and assigns it to the Exports field.
func (o *OperatorLimits) SetExports(v int64) {
	o.Exports = &v
}

// GetImports returns the Imports field value if set, zero value otherwise.
func (o *OperatorLimits) GetImports() int64 {
	if o == nil || o.Imports == nil {
		var ret int64
		return ret
	}
	return *o.Imports
}

// GetImportsOk returns a tuple with the Imports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatorLimits) GetImportsOk() (*int64, bool) {
	if o == nil || o.Imports == nil {
		return nil, false
	}
	return o.Imports, true
}

// HasImports returns a boolean if a field has been set.
func (o *OperatorLimits) HasImports() bool {
	if o != nil && o.Imports != nil {
		return true
	}

	return false
}

// SetImports gets a reference to the given int64 and assigns it to the Imports field.
func (o *OperatorLimits) SetImports(v int64) {
	o.Imports = &v
}

// GetLeaf returns the Leaf field value if set, zero value otherwise.
func (o *OperatorLimits) GetLeaf() int64 {
	if o == nil || o.Leaf == nil {
		var ret int64
		return ret
	}
	return *o.Leaf
}

// GetLeafOk returns a tuple with the Leaf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatorLimits) GetLeafOk() (*int64, bool) {
	if o == nil || o.Leaf == nil {
		return nil, false
	}
	return o.Leaf, true
}

// HasLeaf returns a boolean if a field has been set.
func (o *OperatorLimits) HasLeaf() bool {
	if o != nil && o.Leaf != nil {
		return true
	}

	return false
}

// SetLeaf gets a reference to the given int64 and assigns it to the Leaf field.
func (o *OperatorLimits) SetLeaf(v int64) {
	o.Leaf = &v
}

// GetMaxBytesRequired returns the MaxBytesRequired field value if set, zero value otherwise.
func (o *OperatorLimits) GetMaxBytesRequired() bool {
	if o == nil || o.MaxBytesRequired == nil {
		var ret bool
		return ret
	}
	return *o.MaxBytesRequired
}

// GetMaxBytesRequiredOk returns a tuple with the MaxBytesRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatorLimits) GetMaxBytesRequiredOk() (*bool, bool) {
	if o == nil || o.MaxBytesRequired == nil {
		return nil, false
	}
	return o.MaxBytesRequired, true
}

// HasMaxBytesRequired returns a boolean if a field has been set.
func (o *OperatorLimits) HasMaxBytesRequired() bool {
	if o != nil && o.MaxBytesRequired != nil {
		return true
	}

	return false
}

// SetMaxBytesRequired gets a reference to the given bool and assigns it to the MaxBytesRequired field.
func (o *OperatorLimits) SetMaxBytesRequired(v bool) {
	o.MaxBytesRequired = &v
}

// GetMemStorage returns the MemStorage field value if set, zero value otherwise.
func (o *OperatorLimits) GetMemStorage() int64 {
	if o == nil || o.MemStorage == nil {
		var ret int64
		return ret
	}
	return *o.MemStorage
}

// GetMemStorageOk returns a tuple with the MemStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatorLimits) GetMemStorageOk() (*int64, bool) {
	if o == nil || o.MemStorage == nil {
		return nil, false
	}
	return o.MemStorage, true
}

// HasMemStorage returns a boolean if a field has been set.
func (o *OperatorLimits) HasMemStorage() bool {
	if o != nil && o.MemStorage != nil {
		return true
	}

	return false
}

// SetMemStorage gets a reference to the given int64 and assigns it to the MemStorage field.
func (o *OperatorLimits) SetMemStorage(v int64) {
	o.MemStorage = &v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *OperatorLimits) GetPayload() int64 {
	if o == nil || o.Payload == nil {
		var ret int64
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatorLimits) GetPayloadOk() (*int64, bool) {
	if o == nil || o.Payload == nil {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *OperatorLimits) HasPayload() bool {
	if o != nil && o.Payload != nil {
		return true
	}

	return false
}

// SetPayload gets a reference to the given int64 and assigns it to the Payload field.
func (o *OperatorLimits) SetPayload(v int64) {
	o.Payload = &v
}

// GetStreams returns the Streams field value if set, zero value otherwise.
func (o *OperatorLimits) GetStreams() int64 {
	if o == nil || o.Streams == nil {
		var ret int64
		return ret
	}
	return *o.Streams
}

// GetStreamsOk returns a tuple with the Streams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatorLimits) GetStreamsOk() (*int64, bool) {
	if o == nil || o.Streams == nil {
		return nil, false
	}
	return o.Streams, true
}

// HasStreams returns a boolean if a field has been set.
func (o *OperatorLimits) HasStreams() bool {
	if o != nil && o.Streams != nil {
		return true
	}

	return false
}

// SetStreams gets a reference to the given int64 and assigns it to the Streams field.
func (o *OperatorLimits) SetStreams(v int64) {
	o.Streams = &v
}

// GetSubs returns the Subs field value if set, zero value otherwise.
func (o *OperatorLimits) GetSubs() int64 {
	if o == nil || o.Subs == nil {
		var ret int64
		return ret
	}
	return *o.Subs
}

// GetSubsOk returns a tuple with the Subs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatorLimits) GetSubsOk() (*int64, bool) {
	if o == nil || o.Subs == nil {
		return nil, false
	}
	return o.Subs, true
}

// HasSubs returns a boolean if a field has been set.
func (o *OperatorLimits) HasSubs() bool {
	if o != nil && o.Subs != nil {
		return true
	}

	return false
}

// SetSubs gets a reference to the given int64 and assigns it to the Subs field.
func (o *OperatorLimits) SetSubs(v int64) {
	o.Subs = &v
}

// GetWildcards returns the Wildcards field value if set, zero value otherwise.
func (o *OperatorLimits) GetWildcards() bool {
	if o == nil || o.Wildcards == nil {
		var ret bool
		return ret
	}
	return *o.Wildcards
}

// GetWildcardsOk returns a tuple with the Wildcards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatorLimits) GetWildcardsOk() (*bool, bool) {
	if o == nil || o.Wildcards == nil {
		return nil, false
	}
	return o.Wildcards, true
}

// HasWildcards returns a boolean if a field has been set.
func (o *OperatorLimits) HasWildcards() bool {
	if o != nil && o.Wildcards != nil {
		return true
	}

	return false
}

// SetWildcards gets a reference to the given bool and assigns it to the Wildcards field.
func (o *OperatorLimits) SetWildcards(v bool) {
	o.Wildcards = &v
}

func (o OperatorLimits) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Conn != nil {
		toSerialize["conn"] = o.Conn
	}
	if o.Consumer != nil {
		toSerialize["consumer"] = o.Consumer
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.DiskStorage != nil {
		toSerialize["disk_storage"] = o.DiskStorage
	}
	if o.Exports != nil {
		toSerialize["exports"] = o.Exports
	}
	if o.Imports != nil {
		toSerialize["imports"] = o.Imports
	}
	if o.Leaf != nil {
		toSerialize["leaf"] = o.Leaf
	}
	if o.MaxBytesRequired != nil {
		toSerialize["max_bytes_required"] = o.MaxBytesRequired
	}
	if o.MemStorage != nil {
		toSerialize["mem_storage"] = o.MemStorage
	}
	if o.Payload != nil {
		toSerialize["payload"] = o.Payload
	}
	if o.Streams != nil {
		toSerialize["streams"] = o.Streams
	}
	if o.Subs != nil {
		toSerialize["subs"] = o.Subs
	}
	if o.Wildcards != nil {
		toSerialize["wildcards"] = o.Wildcards
	}
	return json.Marshal(toSerialize)
}

type NullableOperatorLimits struct {
	value *OperatorLimits
	isSet bool
}

func (v NullableOperatorLimits) Get() *OperatorLimits {
	return v.value
}

func (v *NullableOperatorLimits) Set(val *OperatorLimits) {
	v.value = val
	v.isSet = true
}

func (v NullableOperatorLimits) IsSet() bool {
	return v.isSet
}

func (v *NullableOperatorLimits) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOperatorLimits(val *OperatorLimits) *NullableOperatorLimits {
	return &NullableOperatorLimits{value: val, isSet: true}
}

func (v NullableOperatorLimits) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOperatorLimits) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


