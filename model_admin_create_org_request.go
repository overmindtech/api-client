/*
Overmind API

Exchanges OAuth tokens for NATS tokens

API version: 0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package overmind

import (
	"encoding/json"
)

// checks if the AdminCreateOrgRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdminCreateOrgRequest{}

// AdminCreateOrgRequest Represents on organization
type AdminCreateOrgRequest struct {
	// Name of the organization you would like to create. This is the name that an end-user would type in the pre-login prompt to identify which organization they wanted to log in through. Unique logical identifier. May contain lowercase alphabetical characters, numbers, underscores (_), and dashes (-). Can start with a number. Must be between 3 and 50 characters.
	Name *string `json:"name,omitempty"`
	// User-friendly name of the organizations that can be displayed in the login flow and email templates.
	DisplayName *string `json:"display_name,omitempty"`
}

// NewAdminCreateOrgRequest instantiates a new AdminCreateOrgRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdminCreateOrgRequest() *AdminCreateOrgRequest {
	this := AdminCreateOrgRequest{}
	return &this
}

// NewAdminCreateOrgRequestWithDefaults instantiates a new AdminCreateOrgRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdminCreateOrgRequestWithDefaults() *AdminCreateOrgRequest {
	this := AdminCreateOrgRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AdminCreateOrgRequest) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminCreateOrgRequest) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AdminCreateOrgRequest) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AdminCreateOrgRequest) SetName(v string) {
	o.Name = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *AdminCreateOrgRequest) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminCreateOrgRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *AdminCreateOrgRequest) HasDisplayName() bool {
	if o != nil && !isNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *AdminCreateOrgRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

func (o AdminCreateOrgRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdminCreateOrgRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}
	return toSerialize, nil
}

type NullableAdminCreateOrgRequest struct {
	value *AdminCreateOrgRequest
	isSet bool
}

func (v NullableAdminCreateOrgRequest) Get() *AdminCreateOrgRequest {
	return v.value
}

func (v *NullableAdminCreateOrgRequest) Set(val *AdminCreateOrgRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAdminCreateOrgRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAdminCreateOrgRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdminCreateOrgRequest(val *AdminCreateOrgRequest) *NullableAdminCreateOrgRequest {
	return &NullableAdminCreateOrgRequest{value: val, isSet: true}
}

func (v NullableAdminCreateOrgRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdminCreateOrgRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


