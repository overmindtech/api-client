openapi: 3.0.2
info:
  description: Exchanges OAuth tokens for NATS tokens
  title: Overmind API
  version: "0.2"
servers:
- url: https://api.overmind.tech
paths:
  /healthz:
    get:
      description: Runs a health check
      parameters: []
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "500":
          description: Error
      summary: Health check
      tags:
      - management
  /admin/orgs:
    get:
      description: Lists the details of all orgs within Overmind
      operationId: AdminListOrgs
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Organization'
                type: array
          description: OK
        "500":
          description: Error
      security:
      - OAuth2:
        - admin:read
      summary: Orgs - List
      tags:
      - admin
    post:
      description: "Creates a new org, id and public_nkey will be autogenerated"
      operationId: AdminCreateOrg
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/Organization'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Created
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - admin:write
      summary: Orgs - Create
      tags:
      - admin
  /admin/orgs/{org_id}:
    delete:
      description: Deletes an org
      operationId: AdminDeleteOrg
      parameters:
      - description: The id of the org
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - admin:write
      summary: Orgs - Delete
      tags:
      - admin
    get:
      description: Get the details of a given org
      operationId: AdminGetOrg
      parameters:
      - description: The id of the org
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - admin:read
      summary: Orgs - Get details
      tags:
      - admin
    put:
      description: "Update the details of an org, some properties are read only, like\
        \ the org_id"
      operationId: AdminUpdateOrg
      parameters:
      - description: The id of the org
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Organization'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - admin:write
      summary: Orgs - Update
      tags:
      - admin
  /admin/orgs/{org_id}/sources:
    get:
      description: Lists all sources within a particular org
      operationId: AdminListSources
      parameters:
      - description: The id of the org
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Source'
                type: array
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - admin:read
      summary: Sources - List
      tags:
      - admin
    post:
      description: Creates a new source within a given org
      operationId: AdminCreateSource
      parameters:
      - description: The id of the org
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Source'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: Created
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - admin:write
      summary: Sources - Create
      tags:
      - admin
  /admin/orgs/{org_id}/sources/{source_id}:
    delete:
      description: Deletes a source from an org
      operationId: AdminDeleteSource
      parameters:
      - description: The id of the org
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: ID of the source
        explode: false
        in: path
        name: source_id
        required: true
        schema:
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - admin:write
      summary: Sources - Delete
      tags:
      - admin
    get:
      description: Gets the details of a source within a given org
      operationId: AdminGetSource
      parameters:
      - description: The id of the org
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: ID of the source
        explode: false
        in: path
        name: source_id
        required: true
        schema:
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - admin:read
      summary: Sources - Get details
      tags:
      - admin
    put:
      description: Updates the details of a source within a given org
      operationId: AdminUpdateSource
      parameters:
      - description: The id of the org
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: ID of the source
        explode: false
        in: path
        name: source_id
        required: true
        schema:
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Source'
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - admin:write
      summary: Sources - Update
      tags:
      - admin
  /admin/orgs/{org_id}/tokens:
    post:
      description: Create a new NATS token for a given public NKey. The user requesting
        must control the associated private key also in order to connect to NATS as
        the token is not enough on its own
      operationId: AdminCreateToken
      parameters:
      - description: The id of the org
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/TokenRequest'
      responses:
        "201":
          content:
            application/jwt:
              schema:
                description: The JWT as a raw string
                example: eyJ0eXAiOiJKV1QiLCJhbGciOiJlZDI1NTE5LW5rZXkifQ.eyJleHAiOjE2NDU3ODQ0MjYsImp0aSI6IlRXSVM0NEoyNDZFQkNQWkNGNkdXVkNYNkFXSlhPSVhZUFkySkVXWVo2NjRVUTNKWlMzS1EiLCJpYXQiOjE2NDU2OTgwMjYsImlzcyI6IkFEWFdVTVJTT1hPQU5GUlI2QVRLWDRGNEhHS1I0SEdBTFBaQ1haWVJJQlVGUlRSRDJFNFlWTVFGIiwibmFtZSI6InRlc3QtdXNlciIsInN1YiI6IlVCSDRQUkYzWUtNWlpJTzMyNFJHM1FTMkZPT1Y3REtQWFdCRFdLTVJDNUVSSUlIWDdQWUdXQ1dJIiwibmF0cyI6eyJwdWIiOnsiYWxsb3ciOlsicmVxdWVzdC5hbGwiLCJyZXF1ZXN0LmNvbnRleHQuXHUwMDNlIiwiY2FuY2VsLmFsbCIsImNhbmNlbC5jb250ZXh0Llx1MDAzZSIsInJldHVybi5pdGVtLlx1MDAzZSIsInJldHVybi5yZXNwb25zZS5cdTAwM2UiXX0sInN1YiI6eyJhbGxvdyI6WyJyZXR1cm4uaXRlbS5cdTAwM2UiLCJyZXR1cm4ucmVzcG9uc2UuXHUwMDNlIiwicmVxdWVzdC5hbGwiLCJyZXF1ZXN0LmNvbnRleHQuXHUwMDNlIiwiY2FuY2VsLmFsbCIsImNhbmNlbC5jb250ZXh0Llx1MDAzZSJdfSwicmVzcCI6eyJtYXgiOjAsInR0bCI6MH0sInN1YnMiOjEwMDAwMDAsImRhdGEiOjkyMjMzNzIwMzY4NTQ3NzU4MDcsInBheWxvYWQiOjEwMDAwMDAsImFsbG93ZWRfY29ubmVjdGlvbl90eXBlcyI6WyJTVEFOREFSRCJdLCJ0eXBlIjoidXNlciIsInZlcnNpb24iOjJ9fQ.zXI7DDHHtm5F3sQlcaMxuZQ4OudLbysKaXVLbtmMVy9j9DjPm5T_Yl_xZkVJQ34d8xsCVZOHK8EPWa9CD-KODw
                type: string
          description: Created
        "403":
          description: Permission denied
        "400":
          description: Bad request
        "500":
          description: Internal server error
      security:
      - OAuth2:
        - admin:write
        - request:receive
        - request:send
        - reverselink:ingest
        - reverselink:request
        - reverselink:respond
        - gateway:stream
      summary: Generate a NATS token
      tags:
      - admin
  /core/org:
    get:
      description: Get the details of the org that this user belongs to
      operationId: GetOrg
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - org:read
      summary: Org - Get details
      tags:
      - core
    put:
      description: Updates the details of the org that the user belongs to
      operationId: UpdateOrg
      requestBody:
        $ref: '#/components/requestBodies/Organization'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - org:write
      summary: Org - Update
      tags:
      - core
  /core/sources:
    get:
      description: Lists all sources within the user's org
      operationId: ListSources
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Organization'
                type: array
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - source:read
      summary: Sources - List
      tags:
      - core
    post:
      description: Creates a new source within the user's org
      operationId: CreateSource
      parameters:
      - description: The id of the org
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Source'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - source:write
      summary: Sources - Create
      tags:
      - core
  /core/sources/{source_id}:
    delete:
      description: Deletes a source from a user's org
      operationId: DeleteSource
      parameters:
      - description: ID of the source
        explode: false
        in: path
        name: source_id
        required: true
        schema:
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - source:write
      summary: Sources - Delete
      tags:
      - core
    get:
      description: Get the details of a source
      operationId: GetSource
      parameters:
      - description: ID of the source
        explode: false
        in: path
        name: source_id
        required: true
        schema:
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - source:read
      summary: Sources - Get details
      tags:
      - core
    put:
      description: Updates the details of a source
      operationId: UpdateSource
      parameters:
      - description: ID of the source
        explode: false
        in: path
        name: source_id
        required: true
        schema:
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Source'
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - source:write
      summary: Sources - Update
      tags:
      - core
  /core/tokens:
    post:
      description: Create a new NATS token for a given public NKey. The user requesting
        must control the associated private key also in order to connect to NATS as
        the token is not enough on its own
      operationId: CreateToken
      requestBody:
        $ref: '#/components/requestBodies/TokenRequest'
      responses:
        "201":
          content:
            application/jwt:
              schema:
                description: The JWT as a raw string
                example: eyJ0eXAiOiJKV1QiLCJhbGciOiJlZDI1NTE5LW5rZXkifQ.eyJleHAiOjE2NDU3ODQ0MjYsImp0aSI6IlRXSVM0NEoyNDZFQkNQWkNGNkdXVkNYNkFXSlhPSVhZUFkySkVXWVo2NjRVUTNKWlMzS1EiLCJpYXQiOjE2NDU2OTgwMjYsImlzcyI6IkFEWFdVTVJTT1hPQU5GUlI2QVRLWDRGNEhHS1I0SEdBTFBaQ1haWVJJQlVGUlRSRDJFNFlWTVFGIiwibmFtZSI6InRlc3QtdXNlciIsInN1YiI6IlVCSDRQUkYzWUtNWlpJTzMyNFJHM1FTMkZPT1Y3REtQWFdCRFdLTVJDNUVSSUlIWDdQWUdXQ1dJIiwibmF0cyI6eyJwdWIiOnsiYWxsb3ciOlsicmVxdWVzdC5hbGwiLCJyZXF1ZXN0LmNvbnRleHQuXHUwMDNlIiwiY2FuY2VsLmFsbCIsImNhbmNlbC5jb250ZXh0Llx1MDAzZSIsInJldHVybi5pdGVtLlx1MDAzZSIsInJldHVybi5yZXNwb25zZS5cdTAwM2UiXX0sInN1YiI6eyJhbGxvdyI6WyJyZXR1cm4uaXRlbS5cdTAwM2UiLCJyZXR1cm4ucmVzcG9uc2UuXHUwMDNlIiwicmVxdWVzdC5hbGwiLCJyZXF1ZXN0LmNvbnRleHQuXHUwMDNlIiwiY2FuY2VsLmFsbCIsImNhbmNlbC5jb250ZXh0Llx1MDAzZSJdfSwicmVzcCI6eyJtYXgiOjAsInR0bCI6MH0sInN1YnMiOjEwMDAwMDAsImRhdGEiOjkyMjMzNzIwMzY4NTQ3NzU4MDcsInBheWxvYWQiOjEwMDAwMDAsImFsbG93ZWRfY29ubmVjdGlvbl90eXBlcyI6WyJTVEFOREFSRCJdLCJ0eXBlIjoidXNlciIsInZlcnNpb24iOjJ9fQ.zXI7DDHHtm5F3sQlcaMxuZQ4OudLbysKaXVLbtmMVy9j9DjPm5T_Yl_xZkVJQ34d8xsCVZOHK8EPWa9CD-KODw
                type: string
          description: Created
        "403":
          description: Permission denied
        "400":
          description: Bad request
        "500":
          description: Internal server error
      security:
      - OAuth2:
        - request:receive
        - request:send
        - reverselink:ingest
        - reverselink:request
        - reverselink:respond
        - gateway:stream
      summary: Generate a NATS token
      tags:
      - core
components:
  parameters:
    OrgID:
      description: The id of the org
      explode: false
      in: path
      name: org_id
      required: true
      schema:
        minLength: 1
        type: string
      style: simple
    SourceID:
      description: ID of the source
      explode: false
      in: path
      name: source_id
      required: true
      schema:
        format: uuid
        maxLength: 36
        minLength: 36
        type: string
      style: simple
  requestBodies:
    Source:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdminCreateSource_request'
      required: true
    TokenRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TokenRequestData'
      required: true
    Organization:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdminCreateOrg_request'
      required: true
  schemas:
    Source:
      description: A source that is capable of discovering items
      example:
        access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwOi8vbXktZG9tYWluLmF1dGgwLmNvbSIsInN1YiI6ImF1dGgwfDEyMzQ1NiIsImF1ZCI6IjEyMzRhYmNkZWYiLCJleHAiOjEzMTEyODE5NzAsImlhdCI6MTMxMTI4MDk3MCwibmFtZSI6IkphbmUgRG9lIiwiZ2l2ZW5fbmFtZSI6IkphbmUiLCJmYW1pbHlfbmFtZSI6IkRvZSJ9.bql-jxlG9B_bielkqOnjTY9Di9FillFb6IMQINXoYsw
        refresh_token: FHB5M4wVyKPWAa0BaX3i
        image: ghcr.io/overmindtech/stdlib-source:main
        replicas: 0.8008281904610115
        id_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwOi8vbXktZG9tYWluLmF1dGgwLmNvbSIsInN1YiI6ImF1dGgwfDEyMzQ1NiIsImF1ZCI6IjEyMzRhYmNkZWYiLCJleHAiOjEzMTEyODE5NzAsImlhdCI6MTMxMTI4MDk3MCwibmFtZSI6IkphbmUgRG9lIiwiZ2l2ZW5fbmFtZSI6IkphbmUiLCJmYW1pbHlfbmFtZSI6IkRvZSJ9.bql-jxlG9B_bielkqOnjTY9Di9FillFb6IMQINXoYsw
        descriptive_name: stdlib
        source_id: d05aa312-02df-4c8f-89b9-6f875e9ae8ef
        config:
          key: config
      properties:
        descriptive_name:
          description: The descriptive name of the source
          example: stdlib
          type: string
        source_id:
          description: Unique ID of the source
          example: d05aa312-02df-4c8f-89b9-6f875e9ae8ef
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
        id_token:
          description: OAuth ID token that the source should use
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwOi8vbXktZG9tYWluLmF1dGgwLmNvbSIsInN1YiI6ImF1dGgwfDEyMzQ1NiIsImF1ZCI6IjEyMzRhYmNkZWYiLCJleHAiOjEzMTEyODE5NzAsImlhdCI6MTMxMTI4MDk3MCwibmFtZSI6IkphbmUgRG9lIiwiZ2l2ZW5fbmFtZSI6IkphbmUiLCJmYW1pbHlfbmFtZSI6IkRvZSJ9.bql-jxlG9B_bielkqOnjTY9Di9FillFb6IMQINXoYsw
          type: string
        access_token:
          description: OAuth token that allows the source to respond to requests
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwOi8vbXktZG9tYWluLmF1dGgwLmNvbSIsInN1YiI6ImF1dGgwfDEyMzQ1NiIsImF1ZCI6IjEyMzRhYmNkZWYiLCJleHAiOjEzMTEyODE5NzAsImlhdCI6MTMxMTI4MDk3MCwibmFtZSI6IkphbmUgRG9lIiwiZ2l2ZW5fbmFtZSI6IkphbmUiLCJmYW1pbHlfbmFtZSI6IkRvZSJ9.bql-jxlG9B_bielkqOnjTY9Di9FillFb6IMQINXoYsw
          type: string
        refresh_token:
          description: OAuth refresh token that can be exchanged for a new access_token
          example: FHB5M4wVyKPWAa0BaX3i
          type: string
        replicas:
          description: How many replicas of the source to run??? Do we need this?
          type: number
        image:
          description: Docker image of the source
          example: ghcr.io/overmindtech/stdlib-source:main
          minLength: 1
          type: string
        config:
          additionalProperties:
            type: string
          description: Config for this source. See the source documentation for what
            config is available/required
          type: object
      type: object
    Organization:
      description: An organization
      example:
        org_id: org_hdeUXbB55sMMvJLa
        name: test-org
        public_nkey: ACTJ7OYMJQY23E4FFFSUNCUFLBJCXSH6SZVQBT6ZRTIXGJEGC6OLDB3T
        display_name: Test Org
      properties:
        org_id:
          description: Unique ID of the org
          example: org_hdeUXbB55sMMvJLa
          minLength: 1
          type: string
        name:
          description: "Name of the organization you would like to create. This is\
            \ the name that an end-user would type in the pre-login prompt to identify\
            \ which organization they wanted to log in through. Unique logical identifier.\
            \ May contain lowercase alphabetical characters, numbers, underscores\
            \ (_), and dashes (-). Can start with a number. Must be between 3 and\
            \ 50 characters."
          example: test-org
          type: string
        display_name:
          description: User-friendly name of the organizations that can be displayed
            in the login flow and email templates.
          example: Test Org
          type: string
        public_nkey:
          description: The public Nkey which signs all NATS "user" tokens
          example: ACTJ7OYMJQY23E4FFFSUNCUFLBJCXSH6SZVQBT6ZRTIXGJEGC6OLDB3T
          type: string
      type: object
    AdminCreateOrg_request:
      description: Represents on organization
      properties:
        name:
          description: "Name of the organization you would like to create. This is\
            \ the name that an end-user would type in the pre-login prompt to identify\
            \ which organization they wanted to log in through. Unique logical identifier.\
            \ May contain lowercase alphabetical characters, numbers, underscores\
            \ (_), and dashes (-). Can start with a number. Must be between 3 and\
            \ 50 characters."
          example: test-org
          minLength: 1
          type: string
        display_name:
          description: User-friendly name of the organizations that can be displayed
            in the login flow and email templates.
          example: Test Org
          minLength: 1
          type: string
      type: object
    AdminCreateSource_request:
      description: Details to update for a source
      properties:
        descriptive_name:
          description: The descriptive name of the source
          example: stdlib
          type: string
        id_token:
          description: OAuth ID token that the source should use
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwOi8vbXktZG9tYWluLmF1dGgwLmNvbSIsInN1YiI6ImF1dGgwfDEyMzQ1NiIsImF1ZCI6IjEyMzRhYmNkZWYiLCJleHAiOjEzMTEyODE5NzAsImlhdCI6MTMxMTI4MDk3MCwibmFtZSI6IkphbmUgRG9lIiwiZ2l2ZW5fbmFtZSI6IkphbmUiLCJmYW1pbHlfbmFtZSI6IkRvZSJ9.bql-jxlG9B_bielkqOnjTY9Di9FillFb6IMQINXoYsw
          type: string
        access_token:
          description: OAuth token that allows the source to respond to requests
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwOi8vbXktZG9tYWluLmF1dGgwLmNvbSIsInN1YiI6ImF1dGgwfDEyMzQ1NiIsImF1ZCI6IjEyMzRhYmNkZWYiLCJleHAiOjEzMTEyODE5NzAsImlhdCI6MTMxMTI4MDk3MCwibmFtZSI6IkphbmUgRG9lIiwiZ2l2ZW5fbmFtZSI6IkphbmUiLCJmYW1pbHlfbmFtZSI6IkRvZSJ9.bql-jxlG9B_bielkqOnjTY9Di9FillFb6IMQINXoYsw
          externalDocs:
            url: https://github.com/overmindtech/api-server/blob/main/doc/getting_source_tokens.md
          type: string
        refresh_token:
          description: OAuth refresh token that can be exchanged for a new access_token
          example: FHB5M4wVyKPWAa0BaX3i
          type: string
        replicas:
          description: How many replicas of the source to run??? Do we need this?
          type: number
        image:
          description: Docker image of the source
          example: ghcr.io/overmindtech/stdlib-source:main
          type: string
        config:
          additionalProperties:
            type: string
          description: Config for this source. See the source documentation for what
            config is available/required
          type: object
      type: object
    TokenRequestData:
      example:
        user_name: user_name
        user_pub_key: user_pub_key
      properties:
        user_pub_key:
          description: The Public NKey of the user that is requesting a token
          minLength: 1
          type: string
        user_name:
          description: Friendly user name
          minLength: 1
          type: string
      title: TokenRequestData
      type: object
  securitySchemes:
    OAuth2:
      description: Auth0 OAuth
      flows:
        authorizationCode:
          authorizationUrl: https://dev-qsurrmp8.eu.auth0.com/authorization
          scopes:
            admin:read: Read information about all orgs and sources from the admin
              API
            admin:write: Update orgs and sources in the admin API
            org:read: Read information your org
            org:write: "Create, update and delete your org"
            source:read: Read source information
            source:write: "Create, update and delete sources"
            request:receive: Receive requests and respond to them
            request:send: "Ability to send requests to subjects like request.scope.{scope}"
            reverselink:ingest: Ability to communicate with imported requests and
              items subjects from other accounts
            reverselink:request: Can make requests to the revlink service
            reverselink:respond: Can respond to reverse linking requests
            gateway:stream: Can stream gateway responses to be picked up by revlink
          tokenUrl: https://dev-qsurrmp8.eu.auth0.com/oauth/token
        clientCredentials:
          scopes:
            admin:read: Read information about all orgs and sources from the admin
              API
            admin:write: Update orgs and sources in the admin API
            org:read: Read information your org
            org:write: "Create, update and delete your org"
            source:read: Read source information
            source:write: "Create, update and delete sources"
            request:receive: Receive requests and respond to them
            request:send: "Ability to send requests to subjects like request.scope.{scope}"
            reverselink:ingest: Ability to communicate with imported requests and
              items subjects from other accounts
            reverselink:request: Can make requests to the revlink service
            reverselink:respond: Can respond to reverse linking requests
            gateway:stream: Can stream gateway responses to be picked up by revlink
          tokenUrl: https://dev-qsurrmp8.eu.auth0.com/oauth/token
      type: oauth2
