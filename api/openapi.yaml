openapi: 3.0.2
info:
  description: API for managing your Overmind account
  title: Overmind API
  version: "0.2"
servers:
- url: https://api.overmind.tech
paths:
  /healthz:
    get:
      description: Runs a health check
      parameters: []
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "500":
          description: Error
      summary: Health check
      tags:
      - management
  /admin/accounts:
    get:
      description: Lists the details of all NATS Accounts
      operationId: AdminListAccounts
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Account'
                type: array
          description: OK
        "500":
          description: Error
      security:
      - OAuth2:
        - admin:read
      summary: Accounts - List
      tags:
      - admin
    post:
      description: "Creates a new account, public_nkey will be autogenerated"
      operationId: AdminCreateAccount
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/CreateAccount'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Created
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - admin:write
      summary: Accounts - Create
      tags:
      - admin
  /admin/accounts/{account_name}:
    delete:
      description: Deletes an account
      operationId: AdminDeleteAccount
      parameters:
      - description: The name of the account
        explode: false
        in: path
        name: account_name
        required: true
        schema:
          minLength: 1
          pattern: "[A-z0-9-]+"
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - admin:write
      summary: Accounts - Delete
      tags:
      - admin
    get:
      description: Get the details of a given account
      operationId: AdminGetAccount
      parameters:
      - description: The name of the account
        explode: false
        in: path
        name: account_name
        required: true
        schema:
          minLength: 1
          pattern: "[A-z0-9-]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - admin:read
      summary: Accounts - Get details
      tags:
      - admin
  /admin/accounts/{account_name}/sources:
    get:
      description: Lists all sources within a particular account
      operationId: AdminListSources
      parameters:
      - description: The name of the account
        explode: false
        in: path
        name: account_name
        required: true
        schema:
          minLength: 1
          pattern: "[A-z0-9-]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Source'
                type: array
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - admin:read
      summary: Sources - List
      tags:
      - admin
    post:
      description: Creates a new source within a given account
      operationId: AdminCreateSource
      parameters:
      - description: The name of the account
        explode: false
        in: path
        name: account_name
        required: true
        schema:
          minLength: 1
          pattern: "[A-z0-9-]+"
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Source'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: Created
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - admin:write
      summary: Sources - Create
      tags:
      - admin
  /admin/accounts/{account_name}/sources/{source_id}:
    delete:
      description: Deletes a source from an account
      operationId: AdminDeleteSource
      parameters:
      - description: The name of the account
        explode: false
        in: path
        name: account_name
        required: true
        schema:
          minLength: 1
          pattern: "[A-z0-9-]+"
          type: string
        style: simple
      - description: ID of the source
        explode: false
        in: path
        name: source_id
        required: true
        schema:
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - admin:write
      summary: Sources - Delete
      tags:
      - admin
    get:
      description: Gets the details of a source within a given account
      operationId: AdminGetSource
      parameters:
      - description: The name of the account
        explode: false
        in: path
        name: account_name
        required: true
        schema:
          minLength: 1
          pattern: "[A-z0-9-]+"
          type: string
        style: simple
      - description: ID of the source
        explode: false
        in: path
        name: source_id
        required: true
        schema:
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - admin:read
      summary: Sources - Get details
      tags:
      - admin
    put:
      description: Updates the details of a source within a given account
      operationId: AdminUpdateSource
      parameters:
      - description: The name of the account
        explode: false
        in: path
        name: account_name
        required: true
        schema:
          minLength: 1
          pattern: "[A-z0-9-]+"
          type: string
        style: simple
      - description: ID of the source
        explode: false
        in: path
        name: source_id
        required: true
        schema:
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Source'
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - admin:write
      summary: Sources - Update
      tags:
      - admin
  /admin/accounts/{account_name}/tokens:
    post:
      description: Create a new NATS token for a given public NKey. The user requesting
        must control the associated private key also in order to connect to NATS as
        the token is not enough on its own
      operationId: AdminCreateToken
      parameters:
      - description: The name of the account
        explode: false
        in: path
        name: account_name
        required: true
        schema:
          minLength: 1
          pattern: "[A-z0-9-]+"
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/TokenRequest'
      responses:
        "201":
          content:
            application/jwt:
              schema:
                description: The JWT as a raw string
                example: eyJ0eXAiOiJKV1QiLCJhbGciOiJlZDI1NTE5LW5rZXkifQ.eyJleHAiOjE2NDU3ODQ0MjYsImp0aSI6IlRXSVM0NEoyNDZFQkNQWkNGNkdXVkNYNkFXSlhPSVhZUFkySkVXWVo2NjRVUTNKWlMzS1EiLCJpYXQiOjE2NDU2OTgwMjYsImlzcyI6IkFEWFdVTVJTT1hPQU5GUlI2QVRLWDRGNEhHS1I0SEdBTFBaQ1haWVJJQlVGUlRSRDJFNFlWTVFGIiwibmFtZSI6InRlc3QtdXNlciIsInN1YiI6IlVCSDRQUkYzWUtNWlpJTzMyNFJHM1FTMkZPT1Y3REtQWFdCRFdLTVJDNUVSSUlIWDdQWUdXQ1dJIiwibmF0cyI6eyJwdWIiOnsiYWxsb3ciOlsicmVxdWVzdC5hbGwiLCJyZXF1ZXN0LmNvbnRleHQuXHUwMDNlIiwiY2FuY2VsLmFsbCIsImNhbmNlbC5jb250ZXh0Llx1MDAzZSIsInJldHVybi5pdGVtLlx1MDAzZSIsInJldHVybi5yZXNwb25zZS5cdTAwM2UiXX0sInN1YiI6eyJhbGxvdyI6WyJyZXR1cm4uaXRlbS5cdTAwM2UiLCJyZXR1cm4ucmVzcG9uc2UuXHUwMDNlIiwicmVxdWVzdC5hbGwiLCJyZXF1ZXN0LmNvbnRleHQuXHUwMDNlIiwiY2FuY2VsLmFsbCIsImNhbmNlbC5jb250ZXh0Llx1MDAzZSJdfSwicmVzcCI6eyJtYXgiOjAsInR0bCI6MH0sInN1YnMiOjEwMDAwMDAsImRhdGEiOjkyMjMzNzIwMzY4NTQ3NzU4MDcsInBheWxvYWQiOjEwMDAwMDAsImFsbG93ZWRfY29ubmVjdGlvbl90eXBlcyI6WyJTVEFOREFSRCJdLCJ0eXBlIjoidXNlciIsInZlcnNpb24iOjJ9fQ.zXI7DDHHtm5F3sQlcaMxuZQ4OudLbysKaXVLbtmMVy9j9DjPm5T_Yl_xZkVJQ34d8xsCVZOHK8EPWa9CD-KODw
                type: string
          description: Created
        "403":
          description: Permission denied
        "400":
          description: Bad request
        "500":
          description: Internal server error
      security:
      - OAuth2:
        - admin:write
        - request:receive
        - request:send
        - reverselink:ingest
        - reverselink:request
        - reverselink:respond
        - gateway:stream
      summary: Generate a NATS token
      tags:
      - admin
  /core/account:
    get:
      description: Get the details of the account that this user belongs to
      operationId: GetAccount
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - account:read
      summary: Account - Get details
      tags:
      - core
  /core/sources:
    get:
      description: Lists all sources within the user's account
      operationId: ListSources
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Source'
                type: array
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - source:read
      summary: Sources - List
      tags:
      - core
    post:
      description: Creates a new source within the user's account
      operationId: CreateSource
      requestBody:
        $ref: '#/components/requestBodies/Source'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - source:write
      summary: Sources - Create
      tags:
      - core
  /core/sources/{source_id}:
    delete:
      description: Deletes a source from a user's account
      operationId: DeleteSource
      parameters:
      - description: ID of the source
        explode: false
        in: path
        name: source_id
        required: true
        schema:
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - source:write
      summary: Sources - Delete
      tags:
      - core
    get:
      description: Get the details of a source
      operationId: GetSource
      parameters:
      - description: ID of the source
        explode: false
        in: path
        name: source_id
        required: true
        schema:
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - source:read
      summary: Sources - Get details
      tags:
      - core
    put:
      description: Updates the details of a source
      operationId: UpdateSource
      parameters:
      - description: ID of the source
        explode: false
        in: path
        name: source_id
        required: true
        schema:
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Source'
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - OAuth2:
        - source:write
      summary: Sources - Update
      tags:
      - core
  /core/tokens:
    post:
      description: Create a new NATS token for a given public NKey. The user requesting
        must control the associated private key also in order to connect to NATS as
        the token is not enough on its own
      operationId: CreateToken
      requestBody:
        $ref: '#/components/requestBodies/TokenRequest'
      responses:
        "201":
          content:
            application/jwt:
              schema:
                description: The JWT as a raw string
                example: eyJ0eXAiOiJKV1QiLCJhbGciOiJlZDI1NTE5LW5rZXkifQ.eyJleHAiOjE2NDU3ODQ0MjYsImp0aSI6IlRXSVM0NEoyNDZFQkNQWkNGNkdXVkNYNkFXSlhPSVhZUFkySkVXWVo2NjRVUTNKWlMzS1EiLCJpYXQiOjE2NDU2OTgwMjYsImlzcyI6IkFEWFdVTVJTT1hPQU5GUlI2QVRLWDRGNEhHS1I0SEdBTFBaQ1haWVJJQlVGUlRSRDJFNFlWTVFGIiwibmFtZSI6InRlc3QtdXNlciIsInN1YiI6IlVCSDRQUkYzWUtNWlpJTzMyNFJHM1FTMkZPT1Y3REtQWFdCRFdLTVJDNUVSSUlIWDdQWUdXQ1dJIiwibmF0cyI6eyJwdWIiOnsiYWxsb3ciOlsicmVxdWVzdC5hbGwiLCJyZXF1ZXN0LmNvbnRleHQuXHUwMDNlIiwiY2FuY2VsLmFsbCIsImNhbmNlbC5jb250ZXh0Llx1MDAzZSIsInJldHVybi5pdGVtLlx1MDAzZSIsInJldHVybi5yZXNwb25zZS5cdTAwM2UiXX0sInN1YiI6eyJhbGxvdyI6WyJyZXR1cm4uaXRlbS5cdTAwM2UiLCJyZXR1cm4ucmVzcG9uc2UuXHUwMDNlIiwicmVxdWVzdC5hbGwiLCJyZXF1ZXN0LmNvbnRleHQuXHUwMDNlIiwiY2FuY2VsLmFsbCIsImNhbmNlbC5jb250ZXh0Llx1MDAzZSJdfSwicmVzcCI6eyJtYXgiOjAsInR0bCI6MH0sInN1YnMiOjEwMDAwMDAsImRhdGEiOjkyMjMzNzIwMzY4NTQ3NzU4MDcsInBheWxvYWQiOjEwMDAwMDAsImFsbG93ZWRfY29ubmVjdGlvbl90eXBlcyI6WyJTVEFOREFSRCJdLCJ0eXBlIjoidXNlciIsInZlcnNpb24iOjJ9fQ.zXI7DDHHtm5F3sQlcaMxuZQ4OudLbysKaXVLbtmMVy9j9DjPm5T_Yl_xZkVJQ34d8xsCVZOHK8EPWa9CD-KODw
                type: string
          description: Created
        "403":
          description: Permission denied
        "400":
          description: Bad request
        "500":
          description: Internal server error
      security:
      - OAuth2:
        - request:receive
        - request:send
        - reverselink:ingest
        - reverselink:request
        - reverselink:respond
        - gateway:stream
      summary: Generate a NATS token
      tags:
      - core
components:
  parameters:
    AccountName:
      description: The name of the account
      explode: false
      in: path
      name: account_name
      required: true
      schema:
        minLength: 1
        pattern: "[A-z0-9-]+"
        type: string
      style: simple
    SourceID:
      description: ID of the source
      explode: false
      in: path
      name: source_id
      required: true
      schema:
        format: uuid
        maxLength: 36
        minLength: 36
        type: string
      style: simple
  requestBodies:
    Source:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdminCreateSource_request'
      required: true
    TokenRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TokenRequestData'
      required: true
    CreateAccount:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdminCreateAccount_request'
      required: true
  schemas:
    Source:
      description: A source that is capable of discovering items
      example:
        access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwOi8vbXktZG9tYWluLmF1dGgwLmNvbSIsInN1YiI6ImF1dGgwfDEyMzQ1NiIsImF1ZCI6IjEyMzRhYmNkZWYiLCJleHAiOjEzMTEyODE5NzAsImlhdCI6MTMxMTI4MDk3MCwibmFtZSI6IkphbmUgRG9lIiwiZ2l2ZW5fbmFtZSI6IkphbmUiLCJmYW1pbHlfbmFtZSI6IkRvZSJ9.bql-jxlG9B_bielkqOnjTY9Di9FillFb6IMQINXoYsw
        refresh_token: FHB5M4wVyKPWAa0BaX3i
        image: ghcr.io/overmindtech/stdlib-source:main
        replicas: 0.8008281904610115
        id_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwOi8vbXktZG9tYWluLmF1dGgwLmNvbSIsInN1YiI6ImF1dGgwfDEyMzQ1NiIsImF1ZCI6IjEyMzRhYmNkZWYiLCJleHAiOjEzMTEyODE5NzAsImlhdCI6MTMxMTI4MDk3MCwibmFtZSI6IkphbmUgRG9lIiwiZ2l2ZW5fbmFtZSI6IkphbmUiLCJmYW1pbHlfbmFtZSI6IkRvZSJ9.bql-jxlG9B_bielkqOnjTY9Di9FillFb6IMQINXoYsw
        descriptive_name: stdlib
        source_id: d05aa312-02df-4c8f-89b9-6f875e9ae8ef
        config:
          key: config
      properties:
        descriptive_name:
          description: The descriptive name of the source
          example: stdlib
          type: string
        source_id:
          description: Unique ID of the source
          example: d05aa312-02df-4c8f-89b9-6f875e9ae8ef
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
        id_token:
          description: OAuth ID token that the source should use
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwOi8vbXktZG9tYWluLmF1dGgwLmNvbSIsInN1YiI6ImF1dGgwfDEyMzQ1NiIsImF1ZCI6IjEyMzRhYmNkZWYiLCJleHAiOjEzMTEyODE5NzAsImlhdCI6MTMxMTI4MDk3MCwibmFtZSI6IkphbmUgRG9lIiwiZ2l2ZW5fbmFtZSI6IkphbmUiLCJmYW1pbHlfbmFtZSI6IkRvZSJ9.bql-jxlG9B_bielkqOnjTY9Di9FillFb6IMQINXoYsw
          type: string
        access_token:
          description: OAuth token that allows the source to respond to requests
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwOi8vbXktZG9tYWluLmF1dGgwLmNvbSIsInN1YiI6ImF1dGgwfDEyMzQ1NiIsImF1ZCI6IjEyMzRhYmNkZWYiLCJleHAiOjEzMTEyODE5NzAsImlhdCI6MTMxMTI4MDk3MCwibmFtZSI6IkphbmUgRG9lIiwiZ2l2ZW5fbmFtZSI6IkphbmUiLCJmYW1pbHlfbmFtZSI6IkRvZSJ9.bql-jxlG9B_bielkqOnjTY9Di9FillFb6IMQINXoYsw
          type: string
        refresh_token:
          description: OAuth refresh token that can be exchanged for a new access_token
          example: FHB5M4wVyKPWAa0BaX3i
          type: string
        replicas:
          description: How many replicas of the source to run??? Do we need this?
          type: number
        image:
          description: Docker image of the source
          example: ghcr.io/overmindtech/stdlib-source:main
          minLength: 1
          type: string
        config:
          additionalProperties:
            type: string
          description: Config for this source. See the source documentation for what
            config is available/required
          type: object
      type: object
    Account:
      description: A NATS Account
      example:
        name: test-account
        public_nkey: ACTJ7OYMJQY23E4FFFSUNCUFLBJCXSH6SZVQBT6ZRTIXGJEGC6OLDB3T
      properties:
        name:
          description: The name of the account
          example: test-account
          minLength: 1
          pattern: "[A-z0-9-]+"
          type: string
        public_nkey:
          description: The public Nkey which signs all NATS "user" tokens
          example: ACTJ7OYMJQY23E4FFFSUNCUFLBJCXSH6SZVQBT6ZRTIXGJEGC6OLDB3T
          type: string
      type: object
    AdminCreateAccount_request:
      description: Creates a new Account. The nkeys is autogenerated by the server
      properties:
        name:
          description: Name of the account. This should only contain alphanumeric
            characters and dashes
          example: test-account
          minLength: 1
          pattern: "[A-z0-9-]+"
          type: string
      type: object
    AdminCreateSource_request:
      description: Details to update for a source
      properties:
        descriptive_name:
          description: The descriptive name of the source
          example: stdlib
          type: string
        id_token:
          description: OAuth ID token that the source should use
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwOi8vbXktZG9tYWluLmF1dGgwLmNvbSIsInN1YiI6ImF1dGgwfDEyMzQ1NiIsImF1ZCI6IjEyMzRhYmNkZWYiLCJleHAiOjEzMTEyODE5NzAsImlhdCI6MTMxMTI4MDk3MCwibmFtZSI6IkphbmUgRG9lIiwiZ2l2ZW5fbmFtZSI6IkphbmUiLCJmYW1pbHlfbmFtZSI6IkRvZSJ9.bql-jxlG9B_bielkqOnjTY9Di9FillFb6IMQINXoYsw
          type: string
        access_token:
          description: OAuth token that allows the source to respond to requests
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwOi8vbXktZG9tYWluLmF1dGgwLmNvbSIsInN1YiI6ImF1dGgwfDEyMzQ1NiIsImF1ZCI6IjEyMzRhYmNkZWYiLCJleHAiOjEzMTEyODE5NzAsImlhdCI6MTMxMTI4MDk3MCwibmFtZSI6IkphbmUgRG9lIiwiZ2l2ZW5fbmFtZSI6IkphbmUiLCJmYW1pbHlfbmFtZSI6IkRvZSJ9.bql-jxlG9B_bielkqOnjTY9Di9FillFb6IMQINXoYsw
          externalDocs:
            url: https://github.com/overmindtech/api-server/blob/main/doc/getting_source_tokens.md
          type: string
        refresh_token:
          description: OAuth refresh token that can be exchanged for a new access_token
          example: FHB5M4wVyKPWAa0BaX3i
          type: string
        replicas:
          description: How many replicas of the source to run??? Do we need this?
          type: number
        image:
          description: Docker image of the source
          example: ghcr.io/overmindtech/stdlib-source:main
          type: string
        config:
          additionalProperties:
            type: string
          description: Config for this source. See the source documentation for what
            config is available/required
          type: object
      type: object
    TokenRequestData:
      example:
        user_name: user_name
        user_pub_key: user_pub_key
      properties:
        user_pub_key:
          description: The Public NKey of the user that is requesting a token
          minLength: 1
          type: string
        user_name:
          description: Friendly user name
          minLength: 1
          type: string
      title: TokenRequestData
      type: object
  securitySchemes:
    OAuth2:
      description: Auth0 OAuth
      flows:
        authorizationCode:
          authorizationUrl: https://dev-qsurrmp8.eu.auth0.com/authorization
          scopes:
            admin:read: Read information about all accounts and sources from the admin
              API
            admin:write: Update accounts and sources in the admin API
            account:read: Read information about your account
            source:read: Read source information
            source:write: "Create, update and delete sources"
            request:receive: Receive requests and respond to them
            request:send: "Ability to send requests to subjects like request.scope.{scope}"
            reverselink:ingest: Ability to communicate with imported requests and
              items subjects from other accounts
            reverselink:request: Can make requests to the revlink service
            reverselink:respond: Can respond to reverse linking requests
            gateway:stream: Can stream gateway responses to be picked up by revlink
          tokenUrl: https://dev-qsurrmp8.eu.auth0.com/oauth/token
        clientCredentials:
          scopes:
            admin:read: Read information about all accounts and sources from the admin
              API
            admin:write: Update accounts and sources in the admin API
            account:read: Read information about your account
            source:read: Read source information
            source:write: "Create, update and delete sources"
            request:receive: Receive requests and respond to them
            request:send: "Ability to send requests to subjects like request.scope.{scope}"
            reverselink:ingest: Ability to communicate with imported requests and
              items subjects from other accounts
            reverselink:request: Can make requests to the revlink service
            reverselink:respond: Can respond to reverse linking requests
            gateway:stream: Can stream gateway responses to be picked up by revlink
          tokenUrl: https://dev-qsurrmp8.eu.auth0.com/oauth/token
      type: oauth2
